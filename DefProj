contacts = []  # Создаем пустой список для хранения контактов

key = 1  # Переменная для генерации уникальных ключей для каждого контакта



def add_contact():  # Функция для добавления нового контакта в список

    global key  # Используем глобальную переменную key для генерации ключа

    name = input("Введите имя: ")  # Запрашиваем имя у пользователя

    email = input("Введите адрес электронной почты: ")  # Запрашиваем email

    phone = input("Введите номер телефона: ")  # Запрашиваем телефон

    new_contact = {"key": key, "name": name, "email": email, "phone": phone}  # Создаем словарь с данными контакта

    contacts.append(new_contact)  # Добавляем словарь в список contacts

    print("Контакт успешно добавлен. Ключ контакта:", key)  # Выводим сообщение об успешном добавлении

    key += 1  # Увеличиваем значение key для следующего контакта



def edit_contact():  # Функция для редактирования контакта

    contact_key = int(input("Введите ключ контакта для редактирования: "))  # Запрашиваем ключ контакта

    for contact in contacts:  # Проходим по всем контактам в списке

        if contact["key"] == contact_key:  # Если ключ контакта совпадает с введенным

            print("Контакт найден.")  # Выводим сообщение о найденном контакте

            print("Выберите данные для редактирования:")  # Предлагаем выбор данных для редактирования

            print("1. Имя")

            print("2. Адрес электронной почты")

            print("3. Номер телефона")

            choice = input("Введите соответствующую цифру: ")  # Запрашиваем выбор пользователя

            if choice == "1":

                new_name = input("Введите новое имя: ")  # Запрашиваем новое имя

                contact["name"] = new_name  # Обновляем имя в словаре контакта

            elif choice == "2":

                new_email = input("Введите новый адрес электронной почты: ")  # Запрашиваем новый email

                contact["email"] = new_email  # Обновляем email в словаре контакта

            elif choice == "3":

                new_phone = input("Введите новый номер телефона: ")  # Запрашиваем новый телефон

                contact["phone"] = new_phone  # Обновляем телефон в словаре контакта

            print("Контакт успешно отредактирован.")  # Выводим сообщение об успешном редактировании

            return  # Выходим из функции

    print("Контакт не найден.")  # Выводим сообщение, если контакт не был найден



def delete_contact():  # Функция для удаления контакта

    contact_key = int(input("Введите ключ контакта для удаления: "))  # Запрашиваем ключ контакта

    for contact in contacts:  # Проходим по всем контактам в списке

        if contact["key"] == contact_key:  # Если ключ контакта совпадает с введенным

            contacts.remove(contact)  # Удаляем контакт из списка

            print("Контакт успешно удален.")  # Выводим сообщение об успешном удалении

            return  # Выходим из функции

    print("Контакт не найден.")  # Выводим сообщение, если контакт не был найден



def search_contact():  # Функция для поиска контакта

    contact_key = int(input("Введите ключ контакта для поиска: "))  # Запрашиваем ключ контакта

    for contact in contacts:  # Проходим по всем контактам в списке

        if contact["key"] == contact_key:  # Если ключ контакта совпадает с введенным

            print(f"Имя: {contact['name']}, Электронная почта: {contact['email']}, Телефон: {contact['phone']}")  # Выводим информацию о контакте

            return  # Выходим из функции

    print("Контакт не найден.")  # Выводим сообщение, если контакт не был найден



def display_contacts():  # Функция для отображения всех контактов

    if len(contacts) == 0:  # Если список contacts пуст

        print("Список контактов пуст.")  # Выводим сообщение

    else:  # Иначе

        print("Список контактов:")  # Выводим заголовок

        for contact in contacts:  # Проходим по всем контактам в списке

            print(f"Ключ: {contact['key']}, Имя: {contact['name']}, Электронная почта: {contact['email']}, Телефон: {contact['phone']}")  # Выводим информацию о каждом контакте



# Меню действий

while True:  # Бесконечный цикл, пока пользователь не выберет выход

    print("\nМеню:")  # Выводим меню действий

    print("1. Добавить контакт")

    print("2. Отредактировать контакт")

    print("3. Удалить контакт")

    print("4. Найти контакт")

    print("5. Отобразить все контакты")

    print("6. Выйти")



    choice = input("Выберите действие (введите соответствующую цифру): ")  # Запрашиваем выбор пользователя



    if choice == "1":  # Если пользователь выбрал добавление контакта

        add_contact()  # Вызываем функцию add_contact()

    elif choice == "2":  # Если пользователь выбрал редактирование контакта

        edit_contact()  # Вызываем функцию edit_contact()

    elif choice == "3":  # Если пользователь выбрал удаление контакта

        delete_contact()  # Вызываем функцию delete_contact()

    elif choice == "4":  # Если пользователь выбрал поиск контакта

        search_contact()  # Вызываем функцию search_contact()

    elif choice == "5":  # Если пользователь выбрал отображение контактов

        display_contacts()  # Вызываем функцию display_contacts()

    elif choice == "6":  # Если пользователь выбрал выход

        print("Выход из программы.")  # Выводим сообщение о выходе

        break  # Прерываем цикл

    else:  # Если пользователь ввел некорректный выбор

        print("Некорректный выбор. Пожалуйста, выберите действие из меню.")  # Выводим сообщение об ошибке

